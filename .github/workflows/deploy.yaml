name: Deploy Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          cache: 'pip' # caching pip dependencies

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Identify Changed Functions
        run: |
          # Check if there are any commits in the repository
          if [ "$(git rev-list --count HEAD)" -eq 0 ]; then
            echo "No commits found in the repository."
            echo "changed_dirs=" >> $GITHUB_ENV
            exit 0
          fi

          # Get the latest commit hash from the main branch
          LATEST_COMMIT=$(git rev-parse HEAD)

          # Get the previous commit hash (if available)
          PREV_COMMIT=$(git rev-parse HEAD~1 || echo "HEAD~1")

          # Get changed files between the latest commit and the previous commit
          CHANGED_FILES=$(git diff --name-only "$PREV_COMMIT" "$LATEST_COMMIT")

          # Extract unique directories from changed files, ensuring no empty values are included
          CHANGED_DIRS=$(echo "$CHANGED_FILES" | awk -F'/' '{print $1}' | sort -u | grep -v '^$')

          echo "Changed directories: $CHANGED_DIRS"

          # Set changed_dirs as a comma-separated list for processing later
          if [ -n "$CHANGED_DIRS" ]; then
            echo "changed_dirs=$(echo "$CHANGED_DIRS" | tr '\n' ',')" >> $GITHUB_ENV
          else
            echo "changed_dirs=" >> $GITHUB_ENV

      - name: Deploy Changed Functions
        if: env.changed_dirs != ''
        run: |
          IFS=',' read -r -a function_dirs <<< "$changed_dirs"  # Split changed_dirs into an array

          for function_dir in "${function_dirs[@]}"; do
            echo "Processing $function_dir"
            cd "$function_dir"
            
            # Set up a dedicated virtual environment
            python -m venv env
            source env/bin/activate

            # Install dependencies if requirements.txt exists
            mkdir -p package
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt --target ./package/
            fi
            deactivate

            # Add Lambda handler to package
            cp lambda_function.py package/

            # Package everything into a zip file
            cd package
            zip -r ../function.zip .
            cd ..

            # Update the Lambda function code in AWS
            aws lambda update-function-code --function-name "$function_dir" --zip-file fileb://function.zip --region ${{ secrets.AWS_REGION }}

            # Clean up
            rm -rf env package function.zip
            cd ..
          done
