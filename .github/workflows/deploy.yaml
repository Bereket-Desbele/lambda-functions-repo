name: Deploy Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: List Branches and Commits
        run: |
          echo "Available branches:"
          git branch -a
          echo "Commit history:"
          git log --oneline --graph --decorate --all

      - name: Identify Changed Functions
        id: changes
        run: |
          git fetch origin main
          
          # Check if there are any commits in the repository
          if [ $(git rev-list --count HEAD) -eq 0 ]; then
            echo "No commits found in the repository."
            echo "changed_dirs=" >> $GITHUB_ENV
            exit 0
          fi

          # Get the latest commit hash from the main branch
          LATEST_COMMIT=$(git rev-parse origin/main)
          
          # Get the previous commit hash (if available)
          PREV_COMMIT=$(git rev-parse origin/main^1 2>/dev/null || echo "HEAD~1")
          
          # Get changed files between the latest commit and the previous commit
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT $LATEST_COMMIT)
          
          # Extract unique directories from changed files, ensuring no empty values are included
          CHANGED_DIRS=$(echo "$CHANGED_FILES" | awk -F'/' '{print $1}' | sort -u | grep -v '^$')
          
          echo "Changed directories: $CHANGED_DIRS"
          
          # Set changed_dirs as a comma-separated list for processing later
          if [ -n "$CHANGED_DIRS" ]; then
            echo "changed_dirs=${CHANGED_DIRS// /,}" >> $GITHUB_ENV  # Replace spaces with commas for proper formatting
          else
            echo "changed_dirs=" >> $GITHUB_ENV
          fi

      - name: Deploy Changed Functions
        if: env.changed_dirs != ''
        run: |
          IFS=',' read -r -a function_dirs <<< "$changed_dirs"  # Split changed_dirs into an array
          
          for function_dir in "${function_dirs[@]}"; do
            echo "Processing $function_dir"
            cd "$function_dir"
            python -m venv env
            source env/bin/activate
            
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt --target ./package/
            fi
            
            deactivate
            
            mkdir -p package
            cp lambda_function.py package/
            
            # Copy installed packages to package directory if they exist
            if [ -d env/lib/python3.8/site-packages ]; then
              cp -r env/lib/python3.8/site-packages/* package/
            fi
            
            cd package
            
            zip -r ../function.zip .
            cd ..
            
            # Update the Lambda function code in AWS
            aws lambda update-function-code --function-name "$function_dir" --zip-file fileb://function.zip --region ${{ secrets.AWS_REGION }} || { echo 'Deployment failed'; exit 1; }
            
            rm -rf env package function.zip
            cd ..
          done
