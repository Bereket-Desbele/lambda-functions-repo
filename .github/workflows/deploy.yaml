name: Deploy Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          cache: 'pip' # caching pip dependencies

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Identify Changed Functions
        run: |
          echo "Checking for commits in the repository..."
          if [ "$(git rev-list --count HEAD)" -eq 0 ]; then
            echo "No commits found in the repository."
            echo "changed_dirs=" >> $GITHUB_ENV
            exit 0
          fi

          echo "Getting the latest commit hash..."
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "LATEST_COMMIT: $LATEST_COMMIT"

          echo "Getting the previous commit hash..."
          PREV_COMMIT=$(git rev-parse HEAD~1 2>/dev/null || echo "")
          echo "PREV_COMMIT: $PREV_COMMIT"

          echo "Getting changed files between the latest and previous commits..."
          CHANGED_FILES=$(git diff --name-only "$PREV_COMMIT" "$LATEST_COMMIT")
          echo "CHANGED_FILES: $CHANGED_FILES"

          echo "Extracting unique directories from changed files..."
          CHANGED_DIRS=$(echo "$CHANGED_FILES" | awk -F'/' '{print $1"/"$2"/"$3}' | sort -u | grep -v '^$')
          echo "CHANGED_DIRS: $CHANGED_DIRS"

          VALID_DIRS=""
          for dir in $CHANGED_DIRS; do
            echo "Checking directory: $dir"
            if [ -f "$dir/lambda_function.py" ] && [ -f "$dir/requirements.txt" ]; then
              VALID_DIRS="$VALID_DIRS $dir"
              echo "Valid directory: $dir"
            else
              echo "Invalid directory: $dir"
            fi
          done

          echo "Valid directories: $VALID_DIRS"

          if [ -n "$VALID_DIRS" ]; then
            echo "changed_dirs=$(echo $VALID_DIRS | tr ' ' ',')" >> $GITHUB_ENV
          else
            echo "changed_dirs=" >> $GITHUB_ENV

      - name: Deploy Changed Functions
        if: env.changed_dirs != ''
        run: |
          echo "Deploying changed functions..."
          IFS=',' read -r -a function_dirs <<< "$changed_dirs"  # Split changed_dirs into an array
          
          for function_dir in "${function_dirs[@]}"; do
            echo "Processing $function_dir"
            cd "$function_dir"
            
            # Set up a dedicated virtual environment
            python -m venv env
            source env/bin/activate

            # Install dependencies if requirements.txt exists
            mkdir -p package
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt --target ./package/
            fi
            
            # Add Lambda handler to package
            cp lambda_function.py package/

            # Package everything into a zip file
            cd package
            zip -r ../function.zip .
            cd ..

            # Update the Lambda function code in AWS
            aws lambda update-function-code --function-name "$function_dir" --zip-file fileb://function.zip --region ${{ secrets.AWS_REGION }}

            # Clean up
            rm -rf env package function.zip
            cd ..
          done